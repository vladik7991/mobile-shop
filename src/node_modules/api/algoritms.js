// // Selection sort

// function selectionSort(aInput){
//     for (var wall = 0; wall < aInput.length - 1; wall++){
//     // find smallest number
//     //wall-index, points at first nuber behind "wall" 
//     var indexOfSmallest = wall;
//     for (var j = wall + 1; j < aInput.length; j++){
//     if(aInput[indexOfSmallest] > aInput[j]){
//     indexOfSmallest = j;
// }
//     }
//     // smallest element is on indexOfSmallest
//     // swap
//     var temp = aInput[wall];
//     aInput[wall] =aInput[indexOfSmallest];
//     aInput[indexOfSmallest] = temp;
//      }
//  }
   

// var aInput = [10,15,93,9,28,1,36]
// console.log(aInput);
// selectionSort(aInput);
// console.log(aInput);


// // Bubble sort

// function bubbleSort(aInput){
//     // Last element(s) of Array
// for(var i = 0; i < aInput.length - 1; i++){
// // loop whole array
// // except the last i elements
// // i represents tej number of already sorted elements
// for(var j = 0; j < aInput.length - i - 1; j++){
// // swap
// // a,b
// if(aInput[j] > aInput[j + 1]){
//     var temp = aInput[j];
//     aInput[j] = aInput[j + 1];
//     aInput[j + 1] = temp;

//    }
//   }
//  }
// }
// // same as bubble sort
// // check for swap
// //  if no swap happens
// // end of the algoritm
   

// var aInput = [10,15,93,9,28,1,36]
// console.log(aInput);
// bubbleSort(aInput);
// console.log(aInput);

// Bubble sort Optimazed

function bubbleSortOptimalized(aInput){
    // Last element(s) of Array
for(var i = 0; i < aInput.length - 1; i++){
// loop whole array
// except the last i elements
// i represents tej number of already sorted elements
swapHappend =false;
for(var j = 0; j < aInput.length - i - 1; j++){
// swap
// a,b
if(aInput[j] > aInput[j + 1]){
    swapHappend =true;
    var temp = aInput[j];
    aInput[j] = aInput[j + 1];
    aInput[j + 1] = temp;

   }
  }
  if(!swapHappend){
    //   the array id sorted
      return
  }
 }
}
// same as bubble sort
// check for swap
//  if no swap happens
// end of the algoritm (return)
   

var aInput = [10,15,93,9,28,1,36]
console.log(aInput);
bubbleSortOptimalized(aInput);
console.log(aInput);



